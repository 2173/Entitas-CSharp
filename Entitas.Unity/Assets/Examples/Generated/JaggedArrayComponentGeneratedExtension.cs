//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public partial class VisualDebugging : Entity {

    public JaggedArrayComponent jaggedArray { get { return (JaggedArrayComponent)GetComponent(VisualDebuggingComponentIds.JaggedArray); } }

    public bool hasJaggedArray { get { return HasComponent(VisualDebuggingComponentIds.JaggedArray); } }

    public VisualDebugging AddJaggedArray(string[][] newJaggedArray) {
        var component = CreateComponent<JaggedArrayComponent>(VisualDebuggingComponentIds.JaggedArray);
        component.jaggedArray = newJaggedArray;
        AddComponent(VisualDebuggingComponentIds.JaggedArray, component);
        return this;
    }

    public VisualDebugging ReplaceJaggedArray(string[][] newJaggedArray) {
        var component = CreateComponent<JaggedArrayComponent>(VisualDebuggingComponentIds.JaggedArray);
        component.jaggedArray = newJaggedArray;
        ReplaceComponent(VisualDebuggingComponentIds.JaggedArray, component);
        return this;
    }

    public VisualDebugging RemoveJaggedArray() {
        RemoveComponent(VisualDebuggingComponentIds.JaggedArray);
        return this;
    }
}

public partial class VisualDebuggingMatcher {

    static IMatcher<VisualDebugging> _matcherJaggedArray;

    public static IMatcher<VisualDebugging> JaggedArray {
        get {
            if(_matcherJaggedArray == null) {
                var matcher = (Matcher<VisualDebugging>)Matcher<VisualDebugging>.AllOf(VisualDebuggingComponentIds.JaggedArray);
                matcher.componentNames = VisualDebuggingComponentIds.componentNames;
                _matcherJaggedArray = matcher;
            }

            return _matcherJaggedArray;
        }
    }
}
