//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public class ISomeInterfaceComponent : IComponent {
    public ISomeInterface value;
}

public partial class VisualDebugging : Entity {

    public ISomeInterfaceComponent iSomeInterface { get { return (ISomeInterfaceComponent)GetComponent(VisualDebuggingComponentIds.ISomeInterface); } }

    public bool hasISomeInterface { get { return HasComponent(VisualDebuggingComponentIds.ISomeInterface); } }

    public VisualDebugging AddISomeInterface(ISomeInterface newValue) {
        var component = CreateComponent<ISomeInterfaceComponent>(VisualDebuggingComponentIds.ISomeInterface);
        component.value = newValue;
        AddComponent(VisualDebuggingComponentIds.ISomeInterface, component);
        return this;
    }

    public VisualDebugging ReplaceISomeInterface(ISomeInterface newValue) {
        var component = CreateComponent<ISomeInterfaceComponent>(VisualDebuggingComponentIds.ISomeInterface);
        component.value = newValue;
        ReplaceComponent(VisualDebuggingComponentIds.ISomeInterface, component);
        return this;
    }

    public VisualDebugging RemoveISomeInterface() {
        RemoveComponent(VisualDebuggingComponentIds.ISomeInterface);
        return this;
    }
}

public partial class VisualDebuggingPool : Pool<VisualDebugging> {

    public VisualDebugging iSomeInterfaceEntity { get { return GetGroup(VisualDebuggingMatcher.ISomeInterface).GetSingleEntity(); } }

    public ISomeInterfaceComponent iSomeInterface { get { return iSomeInterfaceEntity.iSomeInterface; } }

    public bool hasISomeInterface { get { return iSomeInterfaceEntity != null; } }

    public VisualDebugging SetISomeInterface(ISomeInterface newValue) {
        if(hasISomeInterface) {
            throw new EntitasException("Could not set iSomeInterface!\n" + this + " already has an entity with ISomeInterfaceComponent!",
                "You should check if the pool already has a iSomeInterfaceEntity before setting it or use pool.ReplaceISomeInterface().");
        }
        var entity = CreateEntity();
        entity.AddISomeInterface(newValue);
        return entity;
    }

    public VisualDebugging ReplaceISomeInterface(ISomeInterface newValue) {
        var entity = iSomeInterfaceEntity;
        if(entity == null) {
            entity = SetISomeInterface(newValue);
        } else {
            entity.ReplaceISomeInterface(newValue);
        }

        return entity;
    }

    public void RemoveISomeInterface() {
        DestroyEntity(iSomeInterfaceEntity);
    }
}

public partial class VisualDebuggingMatcher {

    static IMatcher<VisualDebugging> _matcherISomeInterface;

    public static IMatcher<VisualDebugging> ISomeInterface {
        get {
            if(_matcherISomeInterface == null) {
                var matcher = (Matcher<VisualDebugging>)Matcher<VisualDebugging>.AllOf(VisualDebuggingComponentIds.ISomeInterface);
                matcher.componentNames = VisualDebuggingComponentIds.componentNames;
                _matcherISomeInterface = matcher;
            }

            return _matcherISomeInterface;
        }
    }
}
