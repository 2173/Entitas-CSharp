//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public class SomeClassComponent : IComponent {
    public SomeClass value;
}

public partial class VisualDebugging : Entity {

    public SomeClassComponent someClass { get { return (SomeClassComponent)GetComponent(VisualDebuggingComponentIds.SomeClass); } }

    public bool hasSomeClass { get { return HasComponent(VisualDebuggingComponentIds.SomeClass); } }

    public VisualDebugging AddSomeClass(SomeClass newValue) {
        var component = CreateComponent<SomeClassComponent>(VisualDebuggingComponentIds.SomeClass);
        component.value = newValue;
        AddComponent(VisualDebuggingComponentIds.SomeClass, component);
        return this;
    }

    public VisualDebugging ReplaceSomeClass(SomeClass newValue) {
        var component = CreateComponent<SomeClassComponent>(VisualDebuggingComponentIds.SomeClass);
        component.value = newValue;
        ReplaceComponent(VisualDebuggingComponentIds.SomeClass, component);
        return this;
    }

    public VisualDebugging RemoveSomeClass() {
        RemoveComponent(VisualDebuggingComponentIds.SomeClass);
        return this;
    }
}

public partial class VisualDebuggingMatcher {

    static IMatcher<VisualDebugging> _matcherSomeClass;

    public static IMatcher<VisualDebugging> SomeClass {
        get {
            if(_matcherSomeClass == null) {
                var matcher = (Matcher<VisualDebugging>)Matcher<VisualDebugging>.AllOf(VisualDebuggingComponentIds.SomeClass);
                matcher.componentNames = VisualDebuggingComponentIds.componentNames;
                _matcherSomeClass = matcher;
            }

            return _matcherSomeClass;
        }
    }
}
