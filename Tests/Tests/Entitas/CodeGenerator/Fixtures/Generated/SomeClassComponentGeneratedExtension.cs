//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public class SomeClassComponent : IComponent {
    public SomeClass value;
}

public partial class Other : Entity {

    public SomeClassComponent someClass { get { return (SomeClassComponent)GetComponent(OtherComponentIds.SomeClass); } }

    public bool hasSomeClass { get { return HasComponent(OtherComponentIds.SomeClass); } }

    public Other AddSomeClass(SomeClass newValue) {
        var component = CreateComponent<SomeClassComponent>(OtherComponentIds.SomeClass);
        component.value = newValue;
        AddComponent(OtherComponentIds.SomeClass, component);
        return this;
    }

    public Other ReplaceSomeClass(SomeClass newValue) {
        var component = CreateComponent<SomeClassComponent>(OtherComponentIds.SomeClass);
        component.value = newValue;
        ReplaceComponent(OtherComponentIds.SomeClass, component);
        return this;
    }

    public Other RemoveSomeClass() {
        RemoveComponent(OtherComponentIds.SomeClass);
        return this;
    }
}

public partial class PoolA : Entity {

    public SomeClassComponent someClass { get { return (SomeClassComponent)GetComponent(PoolAComponentIds.SomeClass); } }

    public bool hasSomeClass { get { return HasComponent(PoolAComponentIds.SomeClass); } }

    public PoolA AddSomeClass(SomeClass newValue) {
        var component = CreateComponent<SomeClassComponent>(PoolAComponentIds.SomeClass);
        component.value = newValue;
        AddComponent(PoolAComponentIds.SomeClass, component);
        return this;
    }

    public PoolA ReplaceSomeClass(SomeClass newValue) {
        var component = CreateComponent<SomeClassComponent>(PoolAComponentIds.SomeClass);
        component.value = newValue;
        ReplaceComponent(PoolAComponentIds.SomeClass, component);
        return this;
    }

    public PoolA RemoveSomeClass() {
        RemoveComponent(PoolAComponentIds.SomeClass);
        return this;
    }
}

public partial class OtherMatcher {

    static IMatcher<Other> _matcherSomeClass;

    public static IMatcher<Other> SomeClass {
        get {
            if(_matcherSomeClass == null) {
                var matcher = (Matcher<Other>)Matcher<Other>.AllOf(OtherComponentIds.SomeClass);
                matcher.componentNames = OtherComponentIds.componentNames;
                _matcherSomeClass = matcher;
            }

            return _matcherSomeClass;
        }
    }
}

public partial class PoolAMatcher {

    static IMatcher<PoolA> _matcherSomeClass;

    public static IMatcher<PoolA> SomeClass {
        get {
            if(_matcherSomeClass == null) {
                var matcher = (Matcher<PoolA>)Matcher<PoolA>.AllOf(PoolAComponentIds.SomeClass);
                matcher.componentNames = PoolAComponentIds.componentNames;
                _matcherSomeClass = matcher;
            }

            return _matcherSomeClass;
        }
    }
}
