//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public partial class Core : Entity {

    public ComponentWithFieldsAndProperties componentWithFieldsAndProperties { get { return (ComponentWithFieldsAndProperties)GetComponent(CoreComponentIds.ComponentWithFieldsAndProperties); } }

    public bool hasComponentWithFieldsAndProperties { get { return HasComponent(CoreComponentIds.ComponentWithFieldsAndProperties); } }

    public Core AddComponentWithFieldsAndProperties(string newPublicField, string newPublicProperty) {
        var component = CreateComponent<ComponentWithFieldsAndProperties>(CoreComponentIds.ComponentWithFieldsAndProperties);
        component.publicField = newPublicField;
        component.publicProperty = newPublicProperty;
        AddComponent(CoreComponentIds.ComponentWithFieldsAndProperties, component);
        return this;
    }

    public Core ReplaceComponentWithFieldsAndProperties(string newPublicField, string newPublicProperty) {
        var component = CreateComponent<ComponentWithFieldsAndProperties>(CoreComponentIds.ComponentWithFieldsAndProperties);
        component.publicField = newPublicField;
        component.publicProperty = newPublicProperty;
        ReplaceComponent(CoreComponentIds.ComponentWithFieldsAndProperties, component);
        return this;
    }

    public Core RemoveComponentWithFieldsAndProperties() {
        RemoveComponent(CoreComponentIds.ComponentWithFieldsAndProperties);
        return this;
    }
}

public partial class CoreMatcher {

    static IMatcher<Core> _matcherComponentWithFieldsAndProperties;

    public static IMatcher<Core> ComponentWithFieldsAndProperties {
        get {
            if(_matcherComponentWithFieldsAndProperties == null) {
                var matcher = (Matcher<Core>)Matcher<Core>.AllOf(CoreComponentIds.ComponentWithFieldsAndProperties);
                matcher.componentNames = CoreComponentIds.componentNames;
                _matcherComponentWithFieldsAndProperties = matcher;
            }

            return _matcherComponentWithFieldsAndProperties;
        }
    }
}
