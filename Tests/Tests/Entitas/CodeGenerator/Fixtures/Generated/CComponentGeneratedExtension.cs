//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public partial class PoolA : Entity {

    static readonly CComponent cComponent = new CComponent();

    public bool isC {
        get { return HasComponent(PoolAComponentIds.C); }
        set {
            if(value != isC) {
                if(value) {
                    AddComponent(PoolAComponentIds.C, cComponent);
                } else {
                    RemoveComponent(PoolAComponentIds.C);
                }
            }
        }
    }

    public PoolA IsC(bool value) {
        isC = value;
        return this;
    }
}

public partial class PoolB : Entity {

    static readonly CComponent cComponent = new CComponent();

    public bool isC {
        get { return HasComponent(PoolBComponentIds.C); }
        set {
            if(value != isC) {
                if(value) {
                    AddComponent(PoolBComponentIds.C, cComponent);
                } else {
                    RemoveComponent(PoolBComponentIds.C);
                }
            }
        }
    }

    public PoolB IsC(bool value) {
        isC = value;
        return this;
    }
}

public partial class PoolC : Entity {

    static readonly CComponent cComponent = new CComponent();

    public bool isC {
        get { return HasComponent(PoolCComponentIds.C); }
        set {
            if(value != isC) {
                if(value) {
                    AddComponent(PoolCComponentIds.C, cComponent);
                } else {
                    RemoveComponent(PoolCComponentIds.C);
                }
            }
        }
    }

    public PoolC IsC(bool value) {
        isC = value;
        return this;
    }
}

public partial class PoolAMatcher {

    static IMatcher<PoolA> _matcherC;

    public static IMatcher<PoolA> C {
        get {
            if(_matcherC == null) {
                var matcher = (Matcher<PoolA>)Matcher<PoolA>.AllOf(PoolAComponentIds.C);
                matcher.componentNames = PoolAComponentIds.componentNames;
                _matcherC = matcher;
            }

            return _matcherC;
        }
    }
}

public partial class PoolBMatcher {

    static IMatcher<PoolB> _matcherC;

    public static IMatcher<PoolB> C {
        get {
            if(_matcherC == null) {
                var matcher = (Matcher<PoolB>)Matcher<PoolB>.AllOf(PoolBComponentIds.C);
                matcher.componentNames = PoolBComponentIds.componentNames;
                _matcherC = matcher;
            }

            return _matcherC;
        }
    }
}

public partial class PoolCMatcher {

    static IMatcher<PoolC> _matcherC;

    public static IMatcher<PoolC> C {
        get {
            if(_matcherC == null) {
                var matcher = (Matcher<PoolC>)Matcher<PoolC>.AllOf(PoolCComponentIds.C);
                matcher.componentNames = PoolCComponentIds.componentNames;
                _matcherC = matcher;
            }

            return _matcherC;
        }
    }
}
